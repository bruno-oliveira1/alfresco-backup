#!/bin/bash
# Backup of Alfresco
# Based on script written by Chris Newald
# Rewriteen by Bruno Oliveira

# Configuration:
  TIMESTAMP=$(date +%mM-%dD-%YA-%HH-%MM)	  	   # Create timestamp using format month, day, year, hour, minute
  AL_FOLDER="/opt/alfresco-community"		  	   # Alfresco folder
  DUMP_NUM=7				         	   # Number of DB backups to keep
  DB_HOME="/opt/alfresco-community/postgresql"	  	   # PostgreSQL folder
  GPG_KEY='KEYVALUE'                                       # Use gpg --list-keys to get your keys
  SOURCE='/opt/alfresco-community/alf_data'                # The path to where the files that we want to backup are
  TARGET='file:///backup/alfresco'                         # The path to where we want to store the backup
  TARGET2='/backup/alfresco'                               # The path to where we want to store the postgres backup
  DUPLICITY=`which duplicity`                              # Duplicity 
  POSTGRESPASS="POSTPASS"                                  # Postgresql password
  PHRASE="GPGPASS"                                         # GPG password
  BK_FULL_FREQ="1M" 					   # Create a new full backup every 1 month
  BK_FULL_LIFE="6W" 					   # Delete any backup older than 6 weeks
  BK_KEEP_FULL="1"  					   # How many full+inc cycle to keep
  NUMBER=`echo $TARGET2 | tr -cd '/' | wc -c`              # Number value its is added 1 to used bellow by find
  echo $((NUMBER+1))
  
    echo " "  >> /var/log/alfrescobackup.log 
    echo "Start running at `date`"  >> /var/log/alfrescobackup.log
    
#----------------------------------------
# 0 - Functions
#----------------------------------------
 
# Function - Stop Alfresco
function al_stop()
{
  $AL_FOLDER/alfresco.sh stop > /dev/null 2>&1
}

# Function - Start Alfresco
function al_start()
{
  $AL_FOLDER/alfresco.sh start > /dev/null 2>&1
}

## Function - Restart Alfresco
function al_restart()
{
  $AL_FOLDER/alfresco.sh restart > /dev/null 2>&1
}

# Function - Start Postgress SQL Server
function p_start()
{
  $DB_HOME/scripts/ctl.sh start > /dev/null 2>&1
}

# Function - Stop Postgress SQL Server
function p_stop()
{
  $DB_HOME/scripts/ctl.sh stop > /dev/null 2>&1
}

#----------------------------------------
# 1 - Begin by stopping Alfresco
#----------------------------------------

  al_stop 

#----------------------------------------
# 2 - Backup the Alfresco database
#----------------------------------------

  # Start the postgress database (which is stopped automatically
  # by the Alfresco stop script
  p_start 

  # Create a log with the date of the script
  echo " " >> /var/log/alfrescobackup.log
  echo "Begin postgres backup at $TIMESTAMP" >> /var/log/alfrescobackup.log

  # Create a filename for the database tar
  DB_DUMP=alfresco_db_${TIMESTAMP}.tar

  # Backup the database to the target folder
  # -Ft = Export database as tar file
  PGPASSWORD=$POSTGRESPASS $DB_HOME/bin/pg_dump -U alfresco alfresco -Ft > $TARGET2/$DB_DUMP
  
  # Check if an error was returned
  if [ "$?" = "0" ]; then
      echo "Database export worked!" >> /var/log/alfrescobackup.log
    else
      echo "Database export failed!" >> /var/log/alfrescobackup.log
  fi
  chown postgres $TARGET2/$DB_DUMP  

#------------------------------------------
# 3 - Backup the Alfresco content folder
#------------------------------------------

## Backup our files ##
#$DUPLICITY --full-if-older-than $BK_FULL_FREQ ${SOURCE} --encrypt-key="${GPG_KEY}" --asynchronous-upload ${TARGET}
PASSPHRASE=$PHRASE $DUPLICITY --full-if-older-than $BK_FULL_FREQ ${SOURCE} --encrypt-key="${GPG_KEY}" --asynchronous-upload ${TARGET}
#  Alfresco data check if an error was returned
  if [ "$?" = "0" ]; then
    echo "Alfresco alf_data backup worked!" >> /var/log/alfrescobackup.log
  else
    echo "Alfresco alf_data backup failed!" >> /var/log/alfrescobackup.log
  fi

## Removing old backups##
$DUPLICITY remove-older-than $BK_FULL_LIFE --force ${TARGET} >> /var/log/alfrescobackup.log
$DUPLICITY remove-all-inc-of-but-n-full $BK_KEEP_FULL --force ${TARGET} >> /var/log/alfrescobackup.log

#------------------------------------------
# 4- Start the Alfresco service
#------------------------------------------

  p_stop 
  al_stop
  al_restart
   
#------------------------------------------
# 5 - Remove backups older than DUMP_NUM days
#------------------------------------------
    
  bkplist=( $(find $TARGET2/ -name 'alfresco_db*' -mtime +${DUMP_NUM} | cut -d/ -f$NUMBER) )
  amount=$(find $TARGET2/ -name 'alfresco_db*' -mtime +${DUMP_NUM} | cut -d/ -f$NUMBER | wc -l)

  for (( i = 0; i < $amount; i++ )); do
    	rm -rf $TARGET2/${bkplist[$i]}
	echo "DB backup $TARGET2/${bkplist[$i]} removed" >> /var/log/alfrescobackup.log
  done

    echo `date`  >> /var/log/alfrescobackup.log
